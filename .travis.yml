---
language: python
python: "2.7"

sudo: required

services:
  - docker

# Install ansible
addons:
  apt:
    packages:
      - python-pip

install:
  # Install ansible
  - pip install ansible==2.5.6

  # Install all dependencies
  - ansible-playbook tests/setup.yml -i tests/travis.hosts --connection=local

  # Create ansible.cfg with correct roles_path
  - printf '[defaults]\nroles_path=../\nhost_key_checking = False' >ansible.cfg

script:
  # Lint YAML files
  - yamllint .
  - ansible-lint tests/test.yml

  # Basic role syntax check
  - ansible-playbook tests/test.yml -i tests/travis.hosts --syntax-check --connection=local
  - ansible-playbook tests/test.yml -i tests/travis.hosts --check --connection=local

  # Run role
  - ansible-playbook tests/test.yml -i tests/travis.hosts --connection=local

  # Run Idempotent test
  - ansible-playbook tests/test.yml -i tests/travis.hosts --connection=local | grep -q 'changed=0.*failed=0'

  # Check if container running
  - docker inspect nginx | grep -q "Status.*running"
  - curl "http://localhost/" | grep -q "Container working"
  - curl "http://localhost/params" | grep -q "Container params - none"
  - curl "http://localhost/hello" | grep -q "Container working"

  # Apply new config
  - ansible-playbook tests/test.yml -i tests/travis.hosts --connection=local --extra-vars "test_param=new_version"


  # Check if container returning all responses
  - docker kill -s HUP nginx
  - docker inspect nginx | grep -q "Status.*running"
  - curl "http://localhost/" | grep -q "Container working"
  - res=$(curl http://localhost/params); echo $res
  - curl "http://localhost/params" | grep -q "Container params - new_version"
  - curl "http://localhost/hello" | grep -q "Container working"

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
